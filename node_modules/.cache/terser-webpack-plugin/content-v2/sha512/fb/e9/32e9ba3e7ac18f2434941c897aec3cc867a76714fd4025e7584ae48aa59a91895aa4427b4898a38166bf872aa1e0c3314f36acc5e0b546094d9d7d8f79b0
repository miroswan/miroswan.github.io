{"map":"{\"version\":3,\"sources\":[\"/Users/dswan/code/resume/node_modules/tslint-loader/index.js??ref--6-0!/Users/dswan/code/resume/src/Main.tsx\"],\"names\":[\"React\",\"__webpack_require__\",\"CssBaseline_1\",\"styles_1\",\"RAppBar_1\",\"ThemeType\",\"View\",\"exports\",\"default\",\"Component\",\"[object Object]\",\"this\",\"state\",\"theme\",\"createMuiTheme\",\"palette\",\"type\",\"Dark\",\"viewMenuSelected\",\"setTheme\",\"setState\",\"Object\",\"assign\",\"Light\",\"setViewAnchor\",\"event\",\"viewMenuAnchor\",\"currentTarget\",\"createElement\",\"MuiThemeProvider\"],\"mappings\":\"sGAAA,MAAAA,EAAAC,EAAA,GAEAC,EAAAD,EAAA,KAEAE,EAAAF,EAAA,IAIAG,EAAAH,EAAA,KAEA,IAAKI,EAKAC,GALL,SAAKD,GACHA,EAAA,MAAA,QACAA,EAAA,KAAA,OAFF,CAAKA,IAAAA,EAAS,KAKd,SAAKC,GACHA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,WAAA,GAAA,aAFF,CAAKA,IAAAA,EAAI,KAmDTC,EAAAC,QAxCA,cAAmBR,EAAMS,UAAzBC,kCACSC,KAAAC,MAAQ,CACbC,MAAOV,EAAAW,eAAe,CACpBC,QAAS,CACPC,KAAMX,EAAUY,QAGpBC,kBAAkB,GAGbP,KAAAQ,SAAW,MAChBR,KAAKS,SAAQC,OAAAC,OAAA,GACRX,KAAKC,MAAK,CACbC,MAAOV,EAAAW,eAAe,CACpBC,QAAS,CACPC,KAAML,KAAKC,MAAMC,MAAME,QAAQC,OAASX,EAAUY,KAAOZ,EAAUkB,MAAQlB,EAAUY,aAMtFN,KAAAa,cAAgB,CAACC,IACtBd,KAAKS,SAAQC,OAAAC,OAAA,GACRX,KAAKC,MAAK,CACbc,eAAgBD,EAAME,cACtBT,kBAAkB,OAIfR,SACL,OACEV,EAAA4B,cAACzB,EAAA0B,iBAAgB,CAAChB,MAAOF,KAAKC,MAAMC,OAClCb,EAAA4B,cAAC1B,EAAAM,QAAW,MACZR,EAAA4B,cAACxB,EAAAI,QAAO,CAACW,SAAUR,KAAKQ,WACxBnB,EAAA4B,cAACtB,EAAI\",\"sourcesContent\":[\"import * as React from 'react';\\n\\nimport CssBaseline from '@material-ui/core/CssBaseline';\\nimport Paper from '@material-ui/core/paper';\\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\\n\\n// Local\\nimport RAppBar from './components/RAppBar';\\n\\nenum ThemeType  {\\n  Light = 'light',\\n  Dark = 'dark',\\n}\\n\\nenum View {\\n  Experience = 1,\\n  Technology,\\n}\\n\\ninterface IState {\\n  theme: Theme;\\n  viewMenuAnchor?: any;\\n  viewMenuSelected: boolean;\\n}\\n\\nclass Main extends React.Component<{}, IState> {\\n  public state = {\\n    theme: createMuiTheme({\\n      palette: {\\n        type: ThemeType.Dark,\\n      },\\n    }),\\n    viewMenuSelected: false,\\n  };\\n\\n  public setTheme = () => {\\n    this.setState({\\n      ...this.state,\\n      theme: createMuiTheme({\\n        palette: {\\n          type: this.state.theme.palette.type === ThemeType.Dark ? ThemeType.Light : ThemeType.Dark,\\n        },\\n      }),\\n    });\\n  }\\n\\n  public setViewAnchor = (event: any) => {\\n    this.setState({\\n      ...this.state,\\n      viewMenuAnchor: event.currentTarget,\\n      viewMenuSelected: true,\\n    });\\n  }\\n\\n  public render() {\\n    return (\\n      <MuiThemeProvider theme={this.state.theme}>\\n        <CssBaseline />\\n        <RAppBar setTheme={this.setTheme}/>\\n        <View />\\n      </MuiThemeProvider>\\n    );\\n  }\\n}\\n\\nexport default Main;\\n\"]}","code":"webpackHotUpdate(0,{202:function(e,t,s){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const a=s(1),n=s(203),r=s(48),i=s(243);var h,c;!function(e){e.Light=\"light\",e.Dark=\"dark\"}(h||(h={})),function(e){e[e.Experience=1]=\"Experience\",e[e.Technology=2]=\"Technology\"}(c||(c={}));t.default=class extends a.Component{constructor(){super(...arguments),this.state={theme:r.createMuiTheme({palette:{type:h.Dark}}),viewMenuSelected:!1},this.setTheme=(()=>{this.setState(Object.assign({},this.state,{theme:r.createMuiTheme({palette:{type:this.state.theme.palette.type===h.Dark?h.Light:h.Dark}})}))}),this.setViewAnchor=(e=>{this.setState(Object.assign({},this.state,{viewMenuAnchor:e.currentTarget,viewMenuSelected:!0}))})}render(){return a.createElement(r.MuiThemeProvider,{theme:this.state.theme},a.createElement(n.default,null),a.createElement(i.default,{setTheme:this.setTheme}),a.createElement(c,null))}}}});","extractedComments":[]}