{"map":"{\"version\":3,\"sources\":[\"/Users/dswan/code/resume/node_modules/source-map-loader/index.js!/Users/dswan/code/resume/node_modules/hyphenate-style-name/index.js\",\"/Users/dswan/code/resume/node_modules/source-map-loader/index.js!/Users/dswan/code/resume/node_modules/jss-plugin-camel-case/dist/jss-plugin-camel-case.esm.js\"],\"names\":[\"uppercasePattern\",\"msPattern\",\"cache\",\"module\",\"exports\",\"string\",\"replace\",\"toLowerCase\",\"__webpack_require__\",\"r\",\"__webpack_exports__\",\"hyphenate_style_name__WEBPACK_IMPORTED_MODULE_0__\",\"hyphenate_style_name__WEBPACK_IMPORTED_MODULE_0___default\",\"n\",\"convertCase\",\"style\",\"converted\",\"prop\",\"fallbacks\",\"Array\",\"isArray\",\"map\",\"onProcessStyle\",\"index\",\"length\",\"onChangeValue\",\"value\",\"rule\",\"hyphenatedProp\"],\"mappings\":\"2EAEA,IAAAA,EAAA,SACAC,EAAA,OACAC,EAAA,GAWAC,EAAAC,QATA,SAAAC,GACA,OAAAA,KAAAH,EACAA,EAAAG,GACAH,EAAAG,GAAAA,EACAC,QAAAN,EAAA,OACAO,cACAD,QAAAL,EAAA,+JCZAO,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,IAAAI,EAAAJ,EAAAK,EAAAF,GASA,SAAAG,EAAAC,GACA,IAAAC,EAAA,GAEA,IAAA,IAAAC,KAAAF,EACAC,EAAcJ,GAAAA,CAASK,IAAAF,EAAAE,GAOvB,OAJAF,EAAAG,YACAC,MAAAC,QAAAL,EAAAG,WAAAF,EAAAE,UAAAH,EAAAG,UAAAG,IAAAP,GAA+FE,EAAAE,UAAAJ,EAAAC,EAAAG,YAG/FF,EAsCeN,EAAA,QA7Bf,WAuBA,MAAA,CACAY,eAvBA,SAAAP,GACA,GAAAI,MAAAC,QAAAL,GAAA,CAEA,IAAA,IAAAQ,EAAA,EAAyBA,EAAAR,EAAAS,OAAsBD,IAC/CR,EAAAQ,GAAAT,EAAAC,EAAAQ,IAGA,OAAAR,EAGA,OAAAD,EAAAC,IAcAU,cAXA,SAAAC,EAAAT,EAAAU,GACA,IAAAC,EAAyBhB,GAAAA,CAASK,GAElC,OAAAA,IAAAW,EAAAF,GACAC,EAAAV,KAAAW,EAAAF,GAEA\",\"sourcesContent\":[\"'use strict';\\n\\nvar uppercasePattern = /[A-Z]/g;\\nvar msPattern = /^ms-/;\\nvar cache = {};\\n\\nfunction hyphenateStyleName(string) {\\n    return string in cache\\n    ? cache[string]\\n    : cache[string] = string\\n      .replace(uppercasePattern, '-$&')\\n      .toLowerCase()\\n      .replace(msPattern, '-ms-');\\n}\\n\\nmodule.exports = hyphenateStyleName;\\n\",\"import hyphenate from 'hyphenate-style-name';\\n\\n/**\\n * Convert camel cased property names to dash separated.\\n *\\n * @param {Object} style\\n * @return {Object}\\n */\\n\\nfunction convertCase(style) {\\n  var converted = {};\\n\\n  for (var prop in style) {\\n    converted[hyphenate(prop)] = style[prop];\\n  }\\n\\n  if (style.fallbacks) {\\n    if (Array.isArray(style.fallbacks)) converted.fallbacks = style.fallbacks.map(convertCase);else converted.fallbacks = convertCase(style.fallbacks);\\n  }\\n\\n  return converted;\\n}\\n/**\\n * Allow camel cased property names by converting them back to dasherized.\\n *\\n * @param {Rule} rule\\n */\\n\\n\\nfunction camelCase() {\\n  function onProcessStyle(style) {\\n    if (Array.isArray(style)) {\\n      // Handle rules like @font-face, which can have multiple styles in an array\\n      for (var index = 0; index < style.length; index++) {\\n        style[index] = convertCase(style[index]);\\n      }\\n\\n      return style;\\n    }\\n\\n    return convertCase(style);\\n  }\\n\\n  function onChangeValue(value, prop, rule) {\\n    var hyphenatedProp = hyphenate(prop); // There was no camel case in place\\n\\n    if (prop === hyphenatedProp) return value;\\n    rule.prop(hyphenatedProp, value); // Core will ignore that property value we set the proper one above.\\n\\n    return null;\\n  }\\n\\n  return {\\n    onProcessStyle: onProcessStyle,\\n    onChangeValue: onChangeValue\\n  };\\n}\\n\\nexport default camelCase;\\n\"]}","code":"webpackHotUpdate(0,Array(26).concat([!1,,,,,,,function(r,n,a){\"use strict\";var e=/[A-Z]/g,t=/^ms-/,o={};r.exports=function(r){return r in o?o[r]:o[r]=r.replace(e,\"-$&\").toLowerCase().replace(t,\"-ms-\")}},,,,,,,,,,,!1,!1,!1,!1,,,,,,,,,,,,,,,,,,,,,,,,,!1,!1,!1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(r,n,a){\"use strict\";a.r(n);var e=a(33),t=a.n(e);function o(r){var n={};for(var a in r)n[t()(a)]=r[a];return r.fallbacks&&(Array.isArray(r.fallbacks)?n.fallbacks=r.fallbacks.map(o):n.fallbacks=o(r.fallbacks)),n}n.default=function(){return{onProcessStyle:function(r){if(Array.isArray(r)){for(var n=0;n<r.length;n++)r[n]=o(r[n]);return r}return o(r)},onChangeValue:function(r,n,a){var e=t()(n);return n===e?r:(a.prop(e,r),null)}}}},,,,,,,,,,,,,,,,,,,,,,,,,function(r,n){throw new Error(\"Module parse failed: Unexpected token (22:11)\\nYou may need an appropriate loader to handle this file type.\\n| class Main {\\n| }\\n> (props) => ;\\n| React.Component < IMain > {\\n|     const: { classes } = props,\")},!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1]));","extractedComments":[]}