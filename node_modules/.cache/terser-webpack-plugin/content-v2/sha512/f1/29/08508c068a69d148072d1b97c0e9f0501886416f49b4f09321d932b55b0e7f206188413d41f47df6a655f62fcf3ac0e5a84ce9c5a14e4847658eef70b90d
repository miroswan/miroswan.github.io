{"map":"{\"version\":3,\"sources\":[\"/Users/dswan/code/resume/node_modules/tslint-loader/index.js??ref--6-0!/Users/dswan/code/resume/src/components/RAppBar.tsx\"],\"names\":[\"AppBar_1\",\"__webpack_require__\",\"Button_1\",\"Toolbar_1\",\"Typography_1\",\"InvertColors_1\",\"React\",\"styles_1\",\"exports\",\"default\",\"withStyles\",\"palette\",\"spacing\",\"createStyles\",\"colorButton\",\"float\",\"root\",\"flexGrow\",\"typography\",\"color\",\"flexgrow\",\"props\",\"classes\",\"setTheme\",\"createElement\",\"className\",\"position\",\"variant\",\"onClick\"],\"mappings\":\"sGAAA,MAAAA,EAAAC,EAAA,KACAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,KACAG,EAAAH,EAAA,KACAI,EAAAJ,EAAA,KACAK,EAAAL,EAAA,GAEAM,EAAAN,EAAA,IAsCAO,EAAAC,QAAeF,EAAAG,WAnCA,EAAGC,QAAAA,EAASC,QAAAA,KAAqBL,EAAAM,aAAa,CAC3DC,YAAa,CACXC,MAAO,SAETC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,MAAO,QACPC,SAAU,KA0BCb,CAlB4Bc,IACzC,MAAMC,QAAEA,EAAOC,SAAEA,GAAaF,EAC9B,OACEf,EAAAkB,cAAA,MAAA,CAAKC,UAAWH,EAAQN,MACtBV,EAAAkB,cAACxB,EAAAS,QAAM,CAACiB,SAAS,UACfpB,EAAAkB,cAACrB,EAAAM,QAAO,KACNH,EAAAkB,cAACpB,EAAAK,QAAU,CAACgB,UAAWH,EAAQJ,WAAYS,QAAQ,MAAI,gBAGvDrB,EAAAkB,cAACtB,EAAAO,QAAM,CAACgB,UAAWH,EAAQR,YAAaK,MAAM,UAAUS,QAASL,GAC/DjB,EAAAkB,cAACnB,EAAAI,QAAY\",\"sourcesContent\":[\"import AppBar from '@material-ui/core/AppBar';\\nimport Button from '@material-ui/core/Button';\\nimport Toolbar from '@material-ui/core/Toolbar';\\nimport Typography from '@material-ui/core/Typography';\\nimport InvertColors from '@material-ui/icons/InvertColors';\\nimport * as React from 'react';\\n\\nimport { createStyles, withStyles, WithStyles } from '@material-ui/core/styles';\\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\\n\\nconst styles = ({ palette, spacing }: Theme) => createStyles({\\n  colorButton: {\\n    float: 'right',\\n  },\\n  root: {\\n    flexGrow: 1,\\n  },\\n  typography: {\\n    color: 'white',\\n    flexgrow: 1,\\n  },\\n});\\n\\nexport interface IRAppBarProps extends WithStyles<typeof styles> {\\n  setTheme: () => void;\\n}\\n\\nconst RAppBar: React.SFC<IRAppBarProps> = (props: IRAppBarProps): JSX.Element => {\\n  const { classes, setTheme } = props;\\n  return (\\n    <div className={classes.root}>\\n      <AppBar position='static'>\\n        <Toolbar>\\n          <Typography className={classes.typography} variant='h2' >\\n            Demitri Swan\\n          </Typography>\\n          <Button className={classes.colorButton} color='inherit' onClick={setTheme}>\\n            <InvertColors />\\n          </Button>\\n        </Toolbar>\\n      </AppBar>\\n    </div>\\n  );\\n};\\n\\nexport default withStyles(styles)(RAppBar);\\n\"]}","code":"webpackHotUpdate(0,{235:function(e,t,l){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const a=l(236),o=l(247),r=l(240),c=l(232),n=l(266),s=l(4),i=l(73);t.default=i.withStyles(({palette:e,spacing:t})=>i.createStyles({colorButton:{float:\"right\"},root:{flexGrow:1},typography:{color:\"white\",flexgrow:1}}))(e=>{const{classes:t,setTheme:l}=e;return s.createElement(\"div\",{className:t.root},s.createElement(a.default,{position:\"static\"},s.createElement(r.default,null,s.createElement(c.default,{className:t.typography,variant:\"h2\"},\"Demitri Swan\"),s.createElement(o.default,{className:t.colorButton,color:\"inherit\",onClick:l},s.createElement(n.default,null)))))})}});","extractedComments":[]}